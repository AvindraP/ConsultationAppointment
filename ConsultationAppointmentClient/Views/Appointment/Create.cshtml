@model ConsultationAppointmentClient.Models.Appointment

@{
    ViewData["Title"] = "Create";
}




<div class="card card-4 row col-md-6 offset-md-4">
    <div class="card-body">
        <h3 class="title">Create Appointment</h3>
        <hr />
        <form asp-action="Create" class="border" id="appointment-form">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @*<div class="form-group">
                <label asp-for="AppointmentId" class="control-label"></label>
                <input asp-for="AppointmentId" class="form-control" />
                <span asp-validation-for="AppointmentId" class="text-danger"></span>
            </div>*@
            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Nic" class="control-label"></label>
                <input asp-for="Nic" class="form-control" />
                <span asp-validation-for="Nic" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="HomeAddress" class="control-label"></label>
                <input asp-for="HomeAddress" class="form-control" />
                <span asp-validation-for="HomeAddress" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ContactNo" class="control-label"></label>
                <input asp-for="ContactNo" class="form-control" />
                <span asp-validation-for="ContactNo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Date" class="control-label"></label>
                <input asp-for="Date" type="date" class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Time" class="control-label"></label>
                <input asp-for="Time" type="time" class="form-control" />
                <span asp-validation-for="Time" class="text-danger"></span>
            </div>
            <div class="form-group p-t-15">
                <input type="submit" value="Create" class="btn btn-primary btn btn--radius-2 btn--blue" />
            </div>
        </form>
    </div>
</div>
<div id="error-message" style="display:block;" class="text-danger"></div>
<div>
    <a asp-action="Index" class="btn btn-primary btn btn--radius-2 btn--blue">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script>
    
    $(document).ready(function () {
        $("#appointment-form").submit(function (event) {
            event.preventDefault();

            $.ajax({
                type: "POST",
                url: "https://localhost:7159/api/appointment/Create", // Replace with the correct URL
                data: $("#appointment-form").serialize(),
                success: function (data) {
                    // Handle success - you can update the UI or redirect as needed
                    alert(data.Message); // Display a success message
                    // Redirect or update the UI as needed
                },
                error: function (xhr) {
                    // Handle errors - display validation errors or other messages
                    if (xhr.status === 400) {
                        // If the server returns a 400 status code (Bad Request),
                        // it means there's a duplicate data error.
                        var errorInfo = JSON.parse(xhr.responseText);
                        $("#duplicate-error").text(errorInfo.errorMessage);
                    } else {
                        // Handle other errors here
                        var errorInfo = JSON.parse(xhr.responseText);
                        alert("An error occurred: " + errorInfo.errorMessage);
                    }
                }
            });
        });
    });
    
    //document.getElementById("Date").addEventListener("change", function() {
    //    // Get the selected date
    //    var selectedDate = this.value;

    //    // Convert the date to the ISO format (yyyy-mm-dd) expected by the server
    //    var isoDate = new Date(selectedDate).toISOString().split('T')[0];

    //    // Update the input value with the ISO-formatted date
    //    this.value = isoDate;
    //});
</script>