@model ConsultationAppointmentClient.Models.Appointment

@{
    ViewData["Title"] = "Edit";
}

<div class="card card-4 row col-md-6 offset-md-4">
    <div class="text-md-end">
        <a class="text-dark" asp-area="" asp-controller="Home" asp-action="Logout">Logout</a>
    </div>
    <div class="card-body">
        <h3 class="title">Edit Appointment</h3>
        <hr />
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="AppointmentId" class="control-label"></label>
                <input asp-for="AppointmentId" class="form-control" readonly/>
                <span asp-validation-for="AppointmentId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FirstName" class="control-label"></label>
                <input asp-for="FirstName" class="form-control" />
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label"></label>
                <input asp-for="LastName" class="form-control" />
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Nic" class="control-label"></label>
                <input asp-for="Nic" class="form-control" />
                <span asp-validation-for="Nic" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="HomeAddress" class="control-label"></label>
                <input asp-for="HomeAddress" class="form-control" />
                <span asp-validation-for="HomeAddress" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ContactNo" class="control-label"></label>
                <input asp-for="ContactNo" class="form-control" />
                <span asp-validation-for="ContactNo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Date" class="control-label"></label>
                <input asp-for="Date" class="form-control" />
                <span asp-validation-for="Date" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Time" class="control-label"></label>
                <input asp-for="Time" class="form-control" />
                <span asp-validation-for="Time" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ConsultantName" class="control-label"></label>
                <select asp-for="ConsultantName" id="consultantDropdown" class="custom-select form-control"></select>
                <span asp-validation-for="ConsultantName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary btn btn--radius-2 btn--blue" />
            </div>
            <div>
                <a asp-action="Index">Back to List</a>
            </div>
        </form>
    </div>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    const consultantDropdown = document.getElementById("consultantDropdown");

    // Fetch consultant data from the Web API
    fetch("https://localhost:7159/api/consultant")
        .then(response => {
            if (!response.ok) {
                throw new Error("Network response was not ok");
            }
            return response.json();
        })
        .then(data => {
            // Populate the dropdown with consultant data
            data.forEach(consultant => {
                const option = document.createElement("option");
                const fullName = `${consultant.consultantFirstName} ${consultant.consultantLastName}`;
                option.value = fullName;
                option.textContent = `${consultant.consultantFirstName} ${consultant.consultantLastName}`;
                consultantDropdown.appendChild(option);
            });
        })
        .catch(error => {
            console.error("Error fetching data:", error);
        });
</script>